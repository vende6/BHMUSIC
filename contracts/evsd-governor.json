{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    "constructor(address _token, address initialOwner)",
    "error FailedCall()",
    "error GovernorAlreadyCastVote(address voter)",
    "error GovernorAlreadyQueuedProposal(uint256 proposalId)",
    "error GovernorDisabledDeposit()",
    "error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold)",
    "error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values)",
    "error GovernorInvalidSignature(address voter)",
    "error GovernorInvalidVoteParams()",
    "error GovernorInvalidVoteType()",
    "error GovernorInvalidVotingPeriod(uint256 votingPeriod)",
    "error GovernorNonexistentProposal(uint256 proposalId)",
    "error GovernorNotQueuedProposal(uint256 proposalId)",
    "error GovernorOnlyExecutor(address account)",
    "error GovernorQueueNotImplemented()",
    "error GovernorRestrictedProposer(address proposer)",
    "error GovernorUnableToCancel(uint256 proposalId, address account)",
    "error GovernorUnexpectedProposalState(uint256 proposalId, uint8 current, bytes32 expectedStates)",
    "error InvalidAccountNonce(address account, uint256 currentNonce)",
    "error InvalidShortString()",
    "error OwnableInvalidOwner(address owner)",
    "error OwnableUnauthorizedAccount(address account)",
    "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
    "error StringTooLong(string str)",
    "event EIP712DomainChanged()",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event ProposalCanceled(uint256 proposalId)",
    "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
    "event ProposalExecuted(uint256 proposalId)",
    "event ProposalQueued(uint256 proposalId, uint256 etaSeconds)",
    "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
    "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
    "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
    "event VoterRegistered(address indexed voter)",
    "event VoterRemoved(address indexed voter)",
    "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
    "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
    "function BALLOT_TYPEHASH() view returns (bytes32)",
    "function CLOCK_MODE() view returns (string)",
    "function COUNTING_MODE() pure returns (string)",
    "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
    "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
    "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
    "function castVoteBySig(uint256 proposalId, uint8 support, address voter, bytes signature) returns (uint256)",
    "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
    "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
    "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, address voter, string reason, bytes params, bytes signature) returns (uint256)",
    "function clock() view returns (uint48)",
    "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
    "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
    "function getProposalId(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) view returns (uint256)",
    "function getVotes(address account, uint256 timepoint) view returns (uint256)",
    "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
    "function hasVoted(uint256 proposalId, address account) view returns (bool)",
    "function hasVotingRights(address) view returns (bool)",
    "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
    "function name() view returns (string)",
    "function nonces(address owner) view returns (uint256)",
    "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
    "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
    "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
    "function owner() view returns (address)",
    "function proposalDeadline(uint256 proposalId) view returns (uint256)",
    "function proposalEta(uint256 proposalId) view returns (uint256)",
    "function proposalNeedsQueuing(uint256) view returns (bool)",
    "function proposalProposer(uint256 proposalId) view returns (address)",
    "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
    "function proposalThreshold() view returns (uint256)",
    "function proposalVotes(uint256 proposalId) view returns (uint256 againstVotes, uint256 forVotes, uint256 abstainVotes)",
    "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
    "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
    "function quorum(uint256) view returns (uint256)",
    "function registerVoter(address voter)",
    "function relay(address target, uint256 value, bytes data) payable",
    "function removeVoter(address voter)",
    "function renounceOwnership()",
    "function setProposalThreshold(uint256 newProposalThreshold)",
    "function setVotingDelay(uint48 newVotingDelay)",
    "function setVotingPeriod(uint32 newVotingPeriod)",
    "function state(uint256 proposalId) view returns (uint8)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function token() view returns (address)",
    "function totalVoters() view returns (uint256)",
    "function transferOwnership(address newOwner)",
    "function version() view returns (string)",
    "function votingDelay() view returns (uint256)",
    "function votingPeriod() view returns (uint256)",
    "receive() payable"
  ]
}